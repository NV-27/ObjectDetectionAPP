import os
import sys
import cv2
import base64
import tempfile
sys.path.append("../")

import numpy as np
import streamlit as st
import matplotlib.pyplot as plt
from imageai.Detection import VideoObjectDetection
from pathlib import Path
from PIL import Image
from utils import convert_video

st.title("–î–µ—Ç–µ–∫—Ü–∏—è –Ω–∞ –≤–∏–¥–µ–æ üìπ")
st.text(os.listdir("../"))
st.text(os.listdir("./"))

st.markdown("----------------------------")
st.markdown("### –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é")
st.text("1. –í—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è (—Å–º. –ø–æ–¥—Å–∫–∞–∑–∫—É)")
st.text("2. –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏")
st.text("3. –í—ã–±—Ä–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–¥–µ–æ")
st.text("4. –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ—Ç–µ–∫—Ü–∏—é")
st.markdown("----------------------------")

help_msg = (
    "–†–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: \n"
    "—á–µ–º —Å–ª–æ–∂–Ω–µ–µ –º–æ–¥–µ–ª—å, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –æ–Ω–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã, –Ω–æ –º–µ–¥–ª–µ–Ω–µ–µ —Ä–∞–±–æ—Ç–∞–µ—Ç."
)
model_size = st.sidebar.selectbox(
    "–†–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏ –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏",
    ("TinyYOLOv3", "YOLOv3", "RetinaNet"),
    help=help_msg
)
help_msg = (
    "–í–∏–¥–µ–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .mp4. "
    "–†–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω 200Mb."
)
uploaded_file = st.sidebar.file_uploader(
    "–í—ã–±–æ—Ä –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏",
    type=["mp4"],
    help=help_msg
)
help_msg = (
    "–ö–∞–¥—Ä—ã –≤ —Å–µ–∫—É–Ω–¥—É –∏–ª–∏ fps (frames per second) ‚Äî "
    "—ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∫–∞–º–µ—Ä–∞ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –∑–∞ –æ–¥–Ω—É —Å–µ–∫—É–Ω–¥—É."
)
frames_per_second = st.sidebar.slider(
    label="–ö–∞–¥—Ä—ã –≤ —Å–µ–∫—É–Ω–¥—É", min_value=1, max_value=240, value=30, step=1, help=help_msg
)
help_msg = (
    "–ß–∞—Å—Ç–æ—Ç–∞ –¥–µ—Ç–µ–∫—Ü–∏–∏ –∫–∞–¥—Ä–æ–≤ - "
    "—ç—Ç–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –∫–∞–¥—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω—ã."
)
frame_detection_interval = st.sidebar.slider(
    label="–ß–∞—Å—Ç–æ—Ç–∞ –¥–µ—Ç–µ–∫—Ü–∏–∏ –∫–∞–¥—Ä–æ–≤", min_value=1, max_value=240, value=1, step=1, help=help_msg
)

if uploaded_file:
    with st.spinner(text="–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ..."):
        st.markdown("### –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –¥–ª—è –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        st.video(uploaded_file)

if uploaded_file:
    start_detection = st.sidebar.checkbox("–ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ—Ç–µ–∫—Ü–∏—é –æ–±—ä–µ–∫—Ç–æ–≤.")
    try:
        os.mkdir("./video/")
    except FileExistsError:
        pass

    with open("./video/video_for_detect.mp4", mode='wb') as w:
        w.write(uploaded_file.getvalue())

    detector = VideoObjectDetection()
    if model_size == "TinyYOLOv3":
        detector.setModelTypeAsTinyYOLOv3()
        detector.setModelPath(
            "/Users/nv27/Documents/Lovely ML/courses/DL School, part I/ObjectDetectionAPP/models/tiny-yolov3.pt"
        )
    elif model_size == "YOLOv3":
        st.write("–í –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —ç—Ç–æ—Ç —Ç–∏–ø –º–æ–¥–µ–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è üôÇ")
        #detector.setModelTypeAsYOLOv3()
        #detector.setModelPath(
        #    "./models/yolov3.pt"
        #)
    elif model_size == "RetinaNet":
        st.write("–í –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —ç—Ç–æ—Ç —Ç–∏–ø –º–æ–¥–µ–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è üôÇ")
        #detector.setModelTypeAsRetinaNet()
        #detector.setModelPath(
        #    "./models/retinanet_resnet50_fpn_coco-eeacb38b.pth"
        #)
    try:
        detector.loadModel()
    except ValueError:
        st.write("–î–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å TinyYOLOv3.")

    execution_path = "./video/"
    detector.detectObjectsFromVideo(
        input_file_path=os.path.join(execution_path, "video_for_detect.mp4"),
        output_file_path=os.path.join(execution_path, f"video_detected"),
        frame_detection_interval=frame_detection_interval,
        frames_per_second=frames_per_second,
        display_percentage_probability=True,
        log_progress=True,
    )
    convert_video(
        input_path=os.path.join(execution_path, f"video_detected.mp4"),
        output_path=os.path.join(execution_path, f"video_detected_h264.mp4"),
    )
    st.markdown("### –í–∏–¥–µ–æ —Å –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏")
    st.video(
        f"{execution_path}/video_detected_h264.mp4"
    )
